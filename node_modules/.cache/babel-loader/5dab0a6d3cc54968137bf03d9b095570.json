{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\Documents\\\\dev\\\\sorting\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Slider from '@mui/material/Slider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [numbersToSort, setNumbersToSort] = useState([]);\n  const [lengthOfArray, setLengthOfArray] = useState(40); //When the length of Array is changed by the slider, a new array will be generated with the new length \n\n  useEffect(() => {\n    generateArray(lengthOfArray);\n  }, [lengthOfArray]); //Generates an array with random integers\n\n  const generateArray = length => {\n    let tempArray = [];\n\n    for (let i = 0; i < length; i++) {\n      var randomInteger = Math.round(20 + Math.random() * (200 - 20));\n      tempArray.push(randomInteger);\n    }\n\n    setNumbersToSort(tempArray);\n  }; //Conducts a bubble sort on an array\n\n\n  const bubbleSort = arr => {\n    for (var i = 0; i < arr.length; i++) {\n      // Last i elements are already in place  \n      for (var j = 0; j < arr.length - i - 1; j++) {\n        // Checking if the item at present iteration \n        // is greater than the next iteration\n        if (arr[j] > arr[j + 1]) {\n          // If the condition is true then swap them\n          var temp = arr[j];\n          arr[j] = arr[j + 1];\n          arr[j + 1] = temp;\n        }\n      }\n    }\n\n    setNumbersToSort([...arr]);\n  }; //Conducts a Quick sort on an array\n  //Handles changing the value of the slider\n\n\n  const handleChange = (event, newValue) => {\n    setLengthOfArray(newValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        generateArray(lengthOfArray);\n      },\n      children: \"Generate Array\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        bubbleSort(numbersToSort);\n      },\n      children: \"Bubble Sort\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        selectionSort(numbersToSort);\n      },\n      children: \"Bubble Sort\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: lengthOfArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n      defaultValue: 40,\n      \"aria-label\": \"Default\",\n      valueLabelDisplay: \"auto\",\n      onChange: handleChange,\n      min: 20,\n      max: 200\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: numbersToSort.map((number, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: number\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"xWtJ3c6jvVPkYQECvFvV1QyCOzE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/micha/Documents/dev/sorting/src/App.js"],"names":["React","useState","useEffect","useRef","Slider","App","numbersToSort","setNumbersToSort","lengthOfArray","setLengthOfArray","generateArray","length","tempArray","i","randomInteger","Math","round","random","push","bubbleSort","arr","j","temp","handleChange","event","newValue","selectionSort","map","number","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Slider from '@mui/material/Slider';\n\nfunction App() {\n\n  const [numbersToSort, setNumbersToSort] = useState([])\n  const [lengthOfArray, setLengthOfArray] = useState(40)\n\n\n  //When the length of Array is changed by the slider, a new array will be generated with the new length \n  useEffect(() => {\n    generateArray(lengthOfArray)\n  }, [lengthOfArray])\n\n  //Generates an array with random integers\n  const generateArray = (length) => {\n    let tempArray = []\n    for (let i = 0; i < length; i++) {\n      var randomInteger = Math.round(20 + (Math.random() * (200 - 20)))\n      tempArray.push(randomInteger)\n    }\n    setNumbersToSort(tempArray)\n  }\n\n  //Conducts a bubble sort on an array\n  const bubbleSort = (arr) => {\n\n    for (var i = 0; i < arr.length; i++) {\n\n      // Last i elements are already in place  \n      for (var j = 0; j < (arr.length - i - 1); j++) {\n\n        // Checking if the item at present iteration \n        // is greater than the next iteration\n        if (arr[j] > arr[j + 1]) {\n\n          // If the condition is true then swap them\n          var temp = arr[j]\n          arr[j] = arr[j + 1]\n          arr[j + 1] = temp\n        }\n      }\n    }\n\n    setNumbersToSort([...arr])\n  }\n\n  //Conducts a Quick sort on an array\n\n\n\n  //Handles changing the value of the slider\n  const handleChange = (event, newValue) => {\n    setLengthOfArray(newValue);\n  };\n\n  return (\n    <div className=\"App\">\n      {/* <button onClick={() => { console.log(numbersToSort) }}>See Array</button> */}\n      <button onClick={() => { generateArray(lengthOfArray) }}>Generate Array</button>\n      <button onClick={() => { bubbleSort(numbersToSort) }}>Bubble Sort</button>\n      <button onClick={() => { selectionSort(numbersToSort) }}>Bubble Sort</button>\n\n      <h1>{lengthOfArray}</h1>\n      <Slider defaultValue={40} aria-label=\"Default\" valueLabelDisplay=\"auto\" onChange={handleChange} min={20} max={200} />\n      <ul>\n        {numbersToSort.map((number, index) => (\n          <li key={index}>{number}</li>\n        ))}\n      </ul>\n\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}