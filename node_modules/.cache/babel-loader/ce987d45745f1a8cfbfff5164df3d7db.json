{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\Documents\\\\dev\\\\sorting\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Slider from '@mui/material/Slider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [numbersToSort, setNumbersToSort] = useState([]);\n  const [lengthOfArray, setLengthOfArray] = useState(40); //Reference to all the bars in the list - used for visualising and changing the colours of the bars\n\n  const barsRef = useRef(); //Sets the speed of the algorithim (ms)\n\n  const [speed, setSpeed] = useState(); // Turns true when a sorting algorithim is running\n\n  const [isSorting, setIsSorting] = useState(false); //Turns true once the algorithim has finished sorting and goes back to false when the length changes\n\n  const [isSorted, setIsSorted] = useState(false);\n\n  const sleep = milliseconds => {\n    return new Promise(resolve => setTimeout(resolve, milliseconds));\n  }; //When the length of Array is changed by the slider, a new array will be generated with the new length \n\n\n  useEffect(() => {\n    generateArray(lengthOfArray);\n  }, [lengthOfArray]); //Generates an array with random integers\n\n  const generateArray = length => {\n    let tempArray = [];\n\n    for (let i = 0; i < length; i++) {\n      var randomInteger = Math.round(20 + Math.random() * (200 - 20));\n      tempArray.push(randomInteger);\n    }\n\n    setNumbersToSort(tempArray);\n    setIsSorted(false);\n  }; //Conducts a bubble sort on an array\n\n\n  const bubbleSort = async arr => {\n    if (isSorting === false) {\n      for (var i = 0; i < arr.length; i++) {\n        // Last i elements are already in place  \n        for (var j = 0; j < arr.length - i - 1; j++) {\n          // Checking if the item at present iteration \n          // is greater than the next iteration\n          if (arr[j] > arr[j + 1]) {\n            barsRef.current.childNodes[j].style.backgroundColor = \"green\";\n            barsRef.current.childNodes[j + 1].style.backgroundColor = \"red\";\n            await sleep(speed); // If the condition is true then swap them\n\n            var temp = arr[j];\n            arr[j] = arr[j + 1];\n            arr[j + 1] = temp;\n            barsRef.current.childNodes[j].style.backgroundColor = \"blue\";\n            barsRef.current.childNodes[j + 1].style.backgroundColor = \"blue\";\n            setNumbersToSort([...arr]);\n          } else {\n            barsRef.current.childNodes[j].style.backgroundColor = \"green\";\n            barsRef.current.childNodes[j + 1].style.backgroundColor = \"green\";\n            await sleep(speed);\n            barsRef.current.childNodes[j].style.backgroundColor = \"blue\";\n            barsRef.current.childNodes[j + 1].style.backgroundColor = \"blue\";\n          }\n        }\n      }\n\n      setIsSorting(false);\n      setIsSorted(true);\n\n      for (var index = 0; index < arr.length; index++) {\n        barsRef.current.childNodes[index].style.backgroundColor = \"green\";\n      }\n    }\n  }; //Conducts a selection sort on an array\n\n\n  const selectionSort = async (arr, n) => {\n    if (isSorting === false) {\n      var i, j, min_idx; // One by one move boundary of unsorted subarray\n\n      for (i = 0; i < n - 1; i++) {\n        // Find the minimum element in unsorted array\n        min_idx = i;\n        barsRef.current.childNodes[min_idx].style.backgroundColor = \"green\";\n\n        for (j = i + 1; j < n; j++) {\n          if (arr[j] < arr[min_idx]) {\n            barsRef.current.childNodes[min_idx].style.backgroundColor = \"blue\";\n            await sleep(speed);\n            min_idx = j;\n            barsRef.current.childNodes[min_idx].style.backgroundColor = \"green\";\n          } else {\n            barsRef.current.childNodes[j].style.backgroundColor = \"red\";\n            await sleep(speed);\n            barsRef.current.childNodes[j].style.backgroundColor = \"blue\";\n          }\n        } // Swap the found minimum element with the first element\n\n\n        var temp = arr[min_idx];\n        arr[min_idx] = arr[i];\n        barsRef.current.childNodes[min_idx].style.backgroundColor = \"blue\";\n        arr[i] = temp;\n        setNumbersToSort([...arr]);\n      }\n\n      setIsSorting(false);\n      setIsSorted(true);\n\n      for (var index = 0; index < arr.length; index++) {\n        barsRef.current.childNodes[index].style.backgroundColor = \"green\";\n      }\n    }\n  }; //Conducts a insertion sort on an array\n\n\n  const insertionSort = async (arr, n) => {\n    if (isSorting === false) {\n      let i, key, j;\n\n      for (i = 1; i < n; i++) {\n        key = arr[i];\n        j = i - 1;\n        /* Move elements that are \n        greater than key, to one position ahead \n        of their current position */\n\n        while (j >= 0 && arr[j] > key) {\n          arr[j + 1] = arr[j];\n          j = j - 1;\n        }\n\n        arr[j + 1] = key;\n      }\n\n      setIsSorting(false);\n      setIsSorted(true);\n\n      for (var index = 0; index < arr.length; index++) {\n        barsRef.current.childNodes[index].style.backgroundColor = \"green\";\n      }\n    }\n  }; //Handles changing the value of the length slider\n\n\n  const handleLengthChange = (event, newValue) => {\n    if (isSorted === true) {\n      for (var i = 0; i < numbersToSort.length; i++) {\n        barsRef.current.childNodes[i].style.backgroundColor = \"blue\";\n      }\n    }\n\n    setLengthOfArray(newValue);\n  }; //Handles changing the value of the speed slider\n\n\n  const handleSpeedChange = (event, newValue) => {\n    if (newValue === 1) {\n      setSpeed(100);\n    } else if (newValue === 2) {\n      setSpeed(20);\n    } else {\n      setSpeed(0);\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingRight: \"200px\",\n        paddingLeft: \"200px\",\n        backgroundColor: \"grey\",\n        height: \"180px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          if (isSorted === false) {\n            bubbleSort(numbersToSort);\n            setIsSorting(true);\n          }\n        },\n        style: {\n          marginRight: \"80px\",\n          marginTop: \"18px\",\n          padding: \"20px\",\n          borderRadius: \"10px\",\n          borderStyle: \"solid\"\n        },\n        children: \"Bubble Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          if (isSorted === false) {\n            selectionSort(numbersToSort, numbersToSort.length);\n            setIsSorting(true);\n          }\n        },\n        style: {\n          marginRight: \"80px\",\n          marginTop: \"18px\",\n          padding: \"20px\",\n          borderRadius: \"10px\",\n          borderStyle: \"solid\"\n        },\n        children: \"Selection Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"20%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Speed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          defaultValue: 5,\n          \"aria-label\": \"Default\",\n          valueLabelDisplay: \"auto\",\n          onChange: handleSpeedChange,\n          min: 1,\n          max: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"40%\",\n          marginLeft: \"80px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Length\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          defaultValue: 40,\n          \"aria-label\": \"Default\",\n          valueLabelDisplay: \"auto\",\n          onChange: handleLengthChange,\n          min: 20,\n          max: 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      ref: barsRef,\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        marginLeft: \"-40px\"\n      },\n      children: numbersToSort.map((number, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: 'blue',\n          width: \"15px\",\n          height: `${3 * number}px`,\n          margin: \"2px\"\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ToKk+HWffOqW3zn9S2Vi+FTmvk8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/micha/Documents/dev/sorting/src/App.js"],"names":["React","useState","useEffect","useRef","Slider","App","numbersToSort","setNumbersToSort","lengthOfArray","setLengthOfArray","barsRef","speed","setSpeed","isSorting","setIsSorting","isSorted","setIsSorted","sleep","milliseconds","Promise","resolve","setTimeout","generateArray","length","tempArray","i","randomInteger","Math","round","random","push","bubbleSort","arr","j","current","childNodes","style","backgroundColor","temp","index","selectionSort","n","min_idx","insertionSort","key","handleLengthChange","event","newValue","handleSpeedChange","display","justifyContent","alignItems","paddingRight","paddingLeft","height","marginRight","marginTop","padding","borderRadius","borderStyle","width","marginLeft","map","number","margin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Slider from '@mui/material/Slider';\n\nfunction App() {\n\n  const [numbersToSort, setNumbersToSort] = useState([])\n  const [lengthOfArray, setLengthOfArray] = useState(40)\n\n  //Reference to all the bars in the list - used for visualising and changing the colours of the bars\n  const barsRef = useRef()\n\n  //Sets the speed of the algorithim (ms)\n  const [speed, setSpeed] = useState()\n\n  // Turns true when a sorting algorithim is running\n  const [isSorting, setIsSorting] = useState(false)\n\n  //Turns true once the algorithim has finished sorting and goes back to false when the length changes\n  const [isSorted, setIsSorted] = useState(false)\n\n  const sleep = (milliseconds) => {\n    return new Promise(resolve => setTimeout(resolve, milliseconds))\n  }\n\n  //When the length of Array is changed by the slider, a new array will be generated with the new length \n  useEffect(() => {\n    generateArray(lengthOfArray)\n  }, [lengthOfArray])\n\n  //Generates an array with random integers\n  const generateArray = (length) => {\n    let tempArray = []\n    for (let i = 0; i < length; i++) {\n      var randomInteger = Math.round(20 + (Math.random() * (200 - 20)))\n      tempArray.push(randomInteger)\n    }\n    setNumbersToSort(tempArray)\n    setIsSorted(false)\n  }\n\n  //Conducts a bubble sort on an array\n  const bubbleSort = async (arr) => {\n    if (isSorting === false) {\n      for (var i = 0; i < arr.length; i++) {\n\n        // Last i elements are already in place  \n        for (var j = 0; j < (arr.length - i - 1); j++) {\n\n          // Checking if the item at present iteration \n          // is greater than the next iteration\n\n          if (arr[j] > arr[j + 1]) {\n\n            barsRef.current.childNodes[j].style.backgroundColor = \"green\"\n            barsRef.current.childNodes[j + 1].style.backgroundColor = \"red\"\n            await sleep(speed)\n            // If the condition is true then swap them\n            var temp = arr[j]\n            arr[j] = arr[j + 1]\n            arr[j + 1] = temp\n\n            barsRef.current.childNodes[j].style.backgroundColor = \"blue\"\n            barsRef.current.childNodes[j + 1].style.backgroundColor = \"blue\"\n            setNumbersToSort([...arr])\n          } else {\n            barsRef.current.childNodes[j].style.backgroundColor = \"green\"\n            barsRef.current.childNodes[j + 1].style.backgroundColor = \"green\"\n            await sleep(speed)\n            barsRef.current.childNodes[j].style.backgroundColor = \"blue\"\n            barsRef.current.childNodes[j + 1].style.backgroundColor = \"blue\"\n          }\n        }\n      }\n      setIsSorting(false)\n      setIsSorted(true)\n      for (var index = 0; index < arr.length; index++) {\n        barsRef.current.childNodes[index].style.backgroundColor = \"green\"\n      }\n    }\n  }\n\n  //Conducts a selection sort on an array\n  const selectionSort = async (arr, n) => {\n    if (isSorting === false) {\n      var i, j, min_idx;\n\n      // One by one move boundary of unsorted subarray\n      for (i = 0; i < n - 1; i++) {\n        // Find the minimum element in unsorted array\n        min_idx = i;\n        barsRef.current.childNodes[min_idx].style.backgroundColor = \"green\"\n        for (j = i + 1; j < n; j++) {\n          if (arr[j] < arr[min_idx]) {\n            barsRef.current.childNodes[min_idx].style.backgroundColor = \"blue\"\n            await sleep(speed)\n            min_idx = j;\n            barsRef.current.childNodes[min_idx].style.backgroundColor = \"green\"\n          } else {\n            barsRef.current.childNodes[j].style.backgroundColor = \"red\"\n            await sleep(speed)\n            barsRef.current.childNodes[j].style.backgroundColor = \"blue\"\n          }\n        }\n\n        // Swap the found minimum element with the first element\n        var temp = arr[min_idx]\n        arr[min_idx] = arr[i]\n        barsRef.current.childNodes[min_idx].style.backgroundColor = \"blue\"\n        arr[i] = temp\n        setNumbersToSort([...arr])\n      }\n      setIsSorting(false)\n      setIsSorted(true)\n      for (var index = 0; index < arr.length; index++) {\n        barsRef.current.childNodes[index].style.backgroundColor = \"green\"\n      }\n    }\n  }\n\n  //Conducts a insertion sort on an array\n  const insertionSort = async (arr, n) => {\n    if (isSorting === false) {\n      let i, key, j;\n      for (i = 1; i < n; i++) {\n        key = arr[i];\n        j = i - 1;\n\n        /* Move elements that are \n        greater than key, to one position ahead \n        of their current position */\n        while (j >= 0 && arr[j] > key) {\n          arr[j + 1] = arr[j];\n          j = j - 1;\n        }\n        arr[j + 1] = key;\n      }\n      setIsSorting(false)\n      setIsSorted(true)\n      for (var index = 0; index < arr.length; index++) {\n        barsRef.current.childNodes[index].style.backgroundColor = \"green\"\n      }\n    }\n  }\n\n\n  //Handles changing the value of the length slider\n  const handleLengthChange = (event, newValue) => {\n    if (isSorted === true) {\n      for (var i = 0; i < numbersToSort.length; i++) {\n        barsRef.current.childNodes[i].style.backgroundColor = \"blue\"\n      }\n    }\n    setLengthOfArray(newValue);\n  };\n\n  //Handles changing the value of the speed slider\n  const handleSpeedChange = (event, newValue) => {\n    if (newValue === 1) {\n      setSpeed(100)\n    } else if (newValue === 2) {\n      setSpeed(20);\n    } else {\n      setSpeed(0)\n    };\n  };\n\n  return (\n    <div className=\"App\">\n      <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", paddingRight: \"200px\", paddingLeft: \"200px\", backgroundColor: \"grey\", height: \"180px\" }}>\n        <button onClick={() => { if (isSorted === false) { bubbleSort(numbersToSort); setIsSorting(true); } }} style={{ marginRight: \"80px\", marginTop: \"18px\", padding: \"20px\", borderRadius: \"10px\", borderStyle: \"solid\" }} >Bubble Sort</button>\n        <button onClick={() => { if (isSorted === false) { selectionSort(numbersToSort, numbersToSort.length); setIsSorting(true); } }} style={{ marginRight: \"80px\", marginTop: \"18px\", padding: \"20px\", borderRadius: \"10px\", borderStyle: \"solid\" }} >Selection Sort</button>\n        <div style={{ width: \"20%\" }}>\n          <h2>Speed</h2>\n          <Slider defaultValue={5} aria-label=\"Default\" valueLabelDisplay=\"auto\" onChange={handleSpeedChange} min={1} max={3} />\n        </div>\n        <div style={{ width: \"40%\", marginLeft: \"80px\" }}>\n          <h2>Length</h2>\n          <Slider defaultValue={40} aria-label=\"Default\" valueLabelDisplay=\"auto\" onChange={handleLengthChange} min={20} max={100} />\n        </div>\n\n      </div>\n\n\n      {/* Displays list of styled bar's  */}\n      <ul ref={barsRef} style={{ display: \"flex\", justifyContent: \"center\", marginLeft: \"-40px\" }}>\n        {numbersToSort.map((number, index) => (\n          < div key={index} style={{ backgroundColor: 'blue', width: \"15px\", height: `${3 * number}px`, margin: \"2px\" }}></div>\n        ))\n        }\n      </ul >\n\n\n\n    </div >\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}